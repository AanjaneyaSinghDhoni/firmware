#!/usr/bin/haserl
content-type: text/plain

<%
. /www/private/cgi-bin/shared.sh

case $GET_func in
    get_settings)
        export_json "freifunk" "settings"
    ;;
    set_settings)
        ap_ssid="$GET_ap_ssid"
        mac="$GET_mac"
        share_internet="$GET_share_internet"
        mesh_ifs=$(ssort "$GET_mesh_ifs")
        bat_ifs=$(ssort "$GET_bat_ifs")
        wan_ifs=$(ssort "$GET_wan_ifs")
        lan_ifs=$(ssort "$GET_lan_ifs")
        config_nets=$(strip $GET_config_nets)
        
        if [ `uci -q get freifunk.settings.ap_ssid` != $ap_ssid ]; then
            if [ ${#ap_ssid} -gt 32 ]; then
                echo "(E) Settings: Invalid Accesspoint name: '$ap_ssid'."
                exit
            fi
            uci -q set freifunk.settings.ap_ssid=$ap_ssid
        fi
        
        if [ `uci -q get freifunk.settings.share_internet` != $share_internet ]; then
            if [ "$share_internet" != "yes" -a "$share_internet" != "no" ]; then
                echo "(E) Settings: yes/no expected for share_internet."
                exit
            fi
            uci -q set freifunk.settings.share_internet=$share_internet
        fi
        
        if [ `uci -q get freifunk.settings.mac` != $mac ]; then
            #check if mac format is valid
            if [ `echo "$mac" | grep -c -E '^[[:xdigit:]]{1,2}(:[[:xdigit:]]{1,2}){5}$'` -eq 0 ]; then
                echo "(E) Settings: Invalid MAC: '$mac'."
                exit
            fi

            #ifconfig dummy_ext hw ether $mac up &> /dev/null
            #ifconfig dummy_mesh hw ether $mac up &> /dev/null
            #ifconfig br-mesh hw ether $mac up &> /dev/null
            #ifconfig br-mesh `/sbin/mac2ip $mac` &> /dev/null

            uci -q set freifunk.settings.mac="$mac"
        fi
        
        [ -z "$config_nets" ] && { echo "(E) Settings: config_nets is empty."; exit; }
        uci -q set freifunk.settings.config_nets="$config_nets"

        if [ $(count $wan_ifs) -gt 1 ]; then
            echo "(E) Settings: Multi-WAN is not yet supported."
            exit
        fi

        all_ifs=$(ssort "$bat_ifs $mesh_ifs $wan_ifs $lan_ifs")
        all_ifs_uniq=$(ssort_uniq "$bat_ifs $mesh_ifs $wan_ifs $lan_ifs")
        if [ "$all_ifs" != "$all_ifs_uniq" ]; then
            echo "(E) Settings: Duplicate entries detected."
            exit
        fi

        #for ifce in $all_ifs; do
        #    ifconfig $ifce &> /dev/null
        #    [ $? != 0 ] && { echo "(E) settings: '$ifce' does not exist."; exit; }
        #done

        uci -q set freifunk.settings.mesh_interfaces="$mesh_ifs "
        uci -q set freifunk.settings.bat_interfaces="$bat_ifs "
        uci -q set freifunk.settings.wan_interfaces="$wan_ifs "
        uci -q set freifunk.settings.lan_interfaces="$lan_ifs "
        
        uci commit freifunk
        echo "(I) Settings: Settings saved. Please reboot to apply changes."
    ;;
    *)
        echo "(E) settings: Invalid command: '$GET_func'"
    ;;
esac
%>
