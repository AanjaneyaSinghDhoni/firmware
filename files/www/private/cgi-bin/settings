#!/usr/bin/haserl
content-type: text/plain

<%
. /etc/functions.sh

myforeach()                          
{
    local pkg sec opt key val old="$IFS"
    split() { pkg=${1:4}; sec=$2; opt=$3; }
    IFS="
"
    for line in `env | grep "^GET_$1"`; do   
        key=${line%%=*}
        val=${line##*=}
        IFS="#"; split $key;
        [ -n "$opt" ] && $2 "$pkg" "$sec" "$opt" "$val"
    done
    IFS="$old"
}

apply()
{
    local pkg=$1 stype=$2
    
    #remove all section of type $stype
    delete_sections() { uci -q delete $pkg.$1; }
    config_load "$pkg"
    config_foreach delete_sections "$stype"
    
    #create new sections as needed
    add_sections()
    {
        [ "$3" != "stype" ] && return
        msec=`uci -q add $1 $4`
        eval "section_${1}_${2}=\"$msec\""
    }
    myforeach $1 add_sections
    
    #fill new sections with options
    add_options()
    {
        [ "$3" == "stype" ] && return
        eval "msec=\"\$section_${1}_${2}\""
        uci set -q $1.$msec.$3="$val"
        [ $? -ne 0 ] && {
            echo "(E) settings: Error detected - settings not stored - please reboot to restore."
            exit
        }
    }
    myforeach $1 add_options
    
    uci commit "$1"
    echo "(I) settings: Settings for '$1' successfully applied - please reboot to restore."
}


case "$GET_func" in
    get_settings)
        uci -X -P /var/state -q show batman-adv
        uci -X -P /var/state -q show freifunk
        uci -X -P /var/state -q show wireless 
        uci -X -P /var/state -q show network
        #hack to get most existing interfaces
        ifnames=`ifconfig -a | grep "^[[:alpha:]]" | cut -d " " -f 1 | tr '\n' ' '`
        echo "ifconfig.all.interfaces=$ifnames"
        ;;
    set_wireless)
        apply "wireless" "wifi-iface"
    ;;
    set_freifunk)
        apply "freifunk" "settings"
    ;;
    set_network)
        apply "network" "switch_vlan"
    ;;
    set_assignment)
        add() { eval "append ${4}_ifs \"$3\""; }
        myforeach "set_mode" add
        
        uci -q set uci set batman-adv.bat0.interfaces="$mesh_ifs"
        uci -q set network.mesh.ifname="$public_ifs"
        uci -q set network.lan.ifname="$private_ifs"
        uci -q set network.wan.ifname="${wan_ifs%% *}"
        
        uci commit batman-adv
        uci commit network
    ;;
    *)
        echo "(E) settings: Invalid command: '$GET_func'"
    ;;
esac
%>
