#!/usr/bin/haserl
<%
case $POST_func in
    save_settings)
        uci commit freifunk
    ;;
    get_settings)
        ap_ssid=`uci -q get freifunk.settings.ap_ssid`
        ah_ssid=`uci -q get freifunk.settings.ah_ssid`
        ext_ifs=`uci -q get freifunk.settings.ext_interfaces`
        mesh_ifs=`uci -q get freifunk.settings.mesh_interfaces`
        mac=`uci -q get freifunk.settings.mac`

        echo -n "{ \"ap_ssid\" : \"$ap_ssid\", \"ah_ssid\" : \"$ah_ssid\", \"ext_ifs\" : \"$ext_ifs\", \"mesh_ifs\" : \"$mesh_ifs\", \"mac\" : \"$mac\" }"
    ;;
    set_settings)
        ap_ssid="$POST_ap_ssid"
        ah_ssid="$POST_ah_ssid"
        ext_ifs="$POST_ext_ifs"
        mesh_ifs="$POST_mesh_ifs"
        mac="$POST_mac"

        if [ `uci -q get freifunk.settings.ap_ssid` != $ap_ssid ]; then
            if [ ${#ap_ssid} -gt 32 ]; then
                echo "(E) Settings: Invalid Accesspoint name: '$ap_ssid'."
                exit
            fi
            uci -q set freifunk.settings.ap_ssid=$ap_ssid
        fi

        if [ `uci -q get freifunk.settings.ah_ssid` != $ah_ssid ]; then
            if [ ${#ah_ssid} -gt 32 ]; then
                echo "(E) Settings: Invalid Accesspoint name: '$ah_ssid'."
                exit
            fi
            uci -q set freifunk.settings.ah_ssid=$ah_ssid
        fi

        if [ `uci -q get freifunk.settings.mac` != $mac ]; then
            #check if mac format is valid
            if [ `echo "$mac" | grep -c -E '^[[:xdigit:]]{1,2}(:[[:xdigit:]]{1,2}){5}$'` -eq 0 ]; then
                echo "(E) Settings: Invalid MAC: '$mac'."
                exit
            fi

            ifconfig dummy_ext hw ether $mac up &> /dev/null
            ifconfig dummy_mesh hw ether $mac up &> /dev/null
            ifconfig br-mesh hw ether $mac up &> /dev/null
            ifconfig br-mesh `/sbin/mac2ip $mac` &> /dev/null

            uci -q set freifunk.settings.mac=$mac
        fi

        if [ `uci -q freifunk.settings.ext_ifs` != "$ext_ifs" ]; then 
            if [ `echo "$ext_ifs" | grep -c -o -m 1 "^dummy_ext"` -eq 0 ]; then
                echo "(E) Settings: External interfaces must start with dummy_ext interface."
                exit
            fi
            
            for if in $ext_ifs; do
                ifconfig $if &> /dev/null
                [ $? != 0 ] && ( echo "(E) settings: '$if' does not exist."; exit )
                [ "$if" != "${mesh_ifs/$if/}" ] &&  ( echo "(E) settings: '$if' is in mesh interfaces already."; exit )
            done
            
            uci -q set freifunk.settings.ext_ifs=$ext_ifs  
        fi  

        if [ `uci -q freifunk.settings.mesh_ifs` != "$mesh_ifs" ]; then
            if [ `echo "$mesh_ifs" | grep -c -o -m 1 "^dummy_mesh"` -eq 0 ]; then
                echo "(E) Settings: Mesh interfaces must start with dummy_mesh interface."
                exit
            fi
            
            for if in $mesh_ifs; do
                ifconfig $if &> /dev/null
                [ $? != 0 ] && ( echo "(E) settings: '$if' does not exist."; exit )
                [ "$if" != "${ext_ifs/$if/}" ] &&  ( echo "(E) settings: '$if' is in external interfaces already."; exit )
            done
            
            uci -q set freifunk.settings.mesh_ifs=$mesh_ifs
        fi
    ;;
    *)
        echo "(E) settings: Invalid command: '$POST_func'"
    ;;
esac
%>
