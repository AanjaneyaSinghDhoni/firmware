#!/usr/bin/haserl
content-type: text/plain

<%
get_ip() {
	ifconfig "$1" 2> /dev/null | awk -F':' '/inet addr/{split($2,_," ");print _[1]}'
}

case $GET_func in
	reboot)
		reboot
		echo "(I) Bitte warten. Neustart wird durchgef&uuml;hrt..."
	;;
	mac2ip)
		/sbin/mac2ip "$GET_mac"
	;;
	status)
		echo "package misc"
		echo "config data 'data'"
		print() { echo "	option $1 '$2'"; }
		print 'public_ip' `get_ip br-public`
		print 'private_ip' `get_ip br-private`
		up=`uptime`
		print 'load' "${up##*:}"
		uptime="${up%%,*}"
		print 'uptime' "${uptime##*up}"
		print 'uname' "`uname -s -m -r`"
		print 'date' "`date`"
		wan_interfaces=`uci -q get network.wan.ifname`
		wan_interface=${wan_interfaces%% *} #get first interface
		wan_ip=`get_ip $wan_interface`
		[ -n "$wan_ip" ] && print 'wan_ip' "$wan_ip" || print 'wan_ip' '-'
		has_internet=`cat /tmp/has_internet 2> /dev/null`
		[ "$has_internet" = "yes" ] && print 'has_internet' 'Ja' || print 'has_internet' 'Nein'
		share=`uci -q get freifunk.@settings[0].share_internet`
		[ "$share" = "yes" ] && print 'share_internet' 'Ja' || print 'share_internet' 'Nein'
		print 'node_count' $((`batctl tg | grep '^ \*' | cut -b 33-49 | sort | uniq | wc -l`+1))
		print 'neigh_count' `batctl o | grep '^[[:digit:]|[:lower:]]' | cut -b 37-53 | sort | uniq | wc -l`
		print 'firmware_version' "`uci -q get freifunk.@settings[0].version`"
		print 'fastd_version' "`fastd --version 2> /dev/null | cut -d' ' -f 2`"
		print 'batman_version' "`cat /sys/module/batman_adv/version 2> /dev/null`"
		print 'hostname' `uci get system.@system[0].hostname`
		print 'board' `cat /proc/cmdline | sed -rn  's/.*board=([^ ]*).*/\1/p' 2> /dev/null`
	;;
	set_config_file)
		file_name="$GET_name"
		file_data="$GET_data"

		if echo "$file_data" > "/etc/config/$file_name" 2> /dev/null; then
			echo "(I) Einstellungen wurden gespeichert. Bitte Neustarten."
		else
			echo "(E) Beim Speichern ist ein Fehler aufgetreten. Bitte Neustarten."
		fi
	;;
	*)
		echo "(E) misc: Invalid command: '$GET_func'"
	;;
esac
%>
