#!/usr/bin/haserl
content-type: text/plain

<%
get_ip() {
	ifconfig "$1" 2> /dev/null | awk -F':' '/inet addr/{split($2,_," ");print _[1]}'
}

case $GET_func in
	reboot)
		reboot
		echo "(I) Bitte warten. Neustart wird durchgef&uuml;hrt..."
	;;
	mac2ip)
		/sbin/mac2ip "$GET_mac"
	;;
	status)
		echo "package misc"
		echo "config data 'data'"
		print() { echo "	option $1 '$2'"; }
		print 'mesh_ip' `get_ip br-mesh`
		print 'lan_ip' `get_ip br-lan`
		up=`uptime`
		print 'load' "${up##*:}"
		uptime="${up%%,*}"
		print 'uptime' "${uptime##*up}"
		print 'uname' "`uname -s -m -r`"
		print 'date' "`date`"
		wan_interfaces=`uci -q get network.wan.ifname`
		wan_interface=${wan_interfaces%% *} #get first interface
		[ -n "`get_ip $wan_interface`" ] && has_internet="Ja" || has_internet="Nein"
		print 'has_internet' "$has_internet"
		share=`uci -q get freifunk.@settings[0].share_internet`
		[ "$share" = "yes" ] && share="Ja" || share="Nein"
		print 'share_internet' "$share"
		print 'node_count' $((`batctl tg | grep '^ \*' | cut -b 33-49 | sort | uniq | wc -l`+1))
		print 'neigh_count' `batctl o | grep '^[[:digit:]|[:lower:]]' | cut -b 37-53 | sort | uniq | wc -l`
		print 'firmware_version' "`uci -q get freifunk.@settings[0].version`"
		print 'n2n_version' "`edge --help 2>&1 | head -n1 | sed -n -r 's/.*(v[0-9\.]*).*/\1/p'`"
		print 'batman_version' "`cat /sys/module/batman_adv/version 2> /dev/null`"
		print 'hostname' `uci get system.@system[0].hostname`
	;;
	*)
		echo "(E) misc: Invalid command: '$GET_func'"
	;;
esac
%>
