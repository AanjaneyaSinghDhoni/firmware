#!/bin/sh

#check system for initial Freifunk configuration

exec >/root/freifunk_setup.log 2>&1

echo "(I) Freifunk: start freifunk_setup"

/etc/init.d/telnet disable
/etc/init.d/nodogsplash disable
/etc/init.d/n2n disable

#set empty password for root
(echo ""; sleep 1; echo "") | passwd

ap_ssid=`uci get -q freifunk.settings.ap_ssid`
ah_ssid=`uci get -q freifunk.settings.ah_ssid`


wan_interface=`uci -q get network.wan.ifname`
echo "(I) Freifunk: wan interface: '$wan_interface'"

lan_interface=`uci -q get network.lan.ifname`
echo "(I) Freifunk: lan interface: '$lan_interface'"

wifi_device=`uci -q get wireless.@wifi-iface[0].device`
echo "(I) Freifunk: wifi device: '$wifi_device'"


# ------------------------------------------- #
# P R E C O N F I G U R I N G   W I R E L E S S #
# ------------------------------------------- # 

#test if we can span both ad-hoc and access point interfaces
if [ -n "$wifi_device" ]; then
    echo "(I) Freifunk: setup /etc/config/wireless"
    uci set wireless.$wifi_device.channel=1

    #wireless is disabled by default
    uci -q delete wireless.@wifi-device[0].disabled

    #remove all wifi interface entries
    clear_wifi_interfaces() {
        while uci -q delete wireless.@wifi-iface[0]; do :; done
    }
    
    #ad-hoc for batman
    add_ah_interface() {
        uci add wireless wifi-iface
        uci set wireless.@wifi-iface[-1].device="$wifi_device"
        uci set wireless.@wifi-iface[-1].mode=adhoc
        uci set wireless.@wifi-iface[-1].ssid="$ah_ssid"
        uci set wireless.@wifi-iface[-1].bssid="12:CA:FF:EE:BA:BE"
        uci set wireless.@wifi-iface[-1].hidden=1
    }
    
    #access point for clients
    add_ap_interface() {
        uci add wireless wifi-iface
        uci set wireless.@wifi-iface[-1].device="$wifi_device"
        uci set wireless.@wifi-iface[-1].mode=ap
        uci set wireless.@wifi-iface[-1].network=mesh
        uci set wireless.@wifi-iface[-1].ssid="$ap_ssid"
        uci set wireless.@wifi-iface[-1].encryption="none"
    }

    wifi_restart() {
      echo "(I) Freifunk: wireless down/up"                                       
      wifi down                                                                   
      wifi up
    }
    
    record_wifi_interfaces() {
      wifi_ap_interface=`iwconfig 2> /dev/null | awk "/$ap_ssid/ { print \\$1 }"`
      if [ -z "$wifi_ap_interface" ]; then
        wifi_ap_interface=`iwconfig 2> /dev/null | awk "/Mode:Master/ { print \\$1 }"`
      fi
      wifi_ah_interface=`iwconfig 2> /dev/null | awk "/$ah_ssid/ { print \\$1 }"`
    }
    
    clear_wifi_interfaces
    add_ah_interface
    add_ap_interface
    wifi_restart
    record_wifi_interfaces
    
    #if not both interfaces work; try only ad-hoc
    if [ -z "$wifi_ap_interface" -o -z "$wifi_ah_interface" ]; then
      echo "(I) Freifunk: Cannot start ad-hoc and AP mode at the same time - try ad-hoc only now."
      clear_wifi_interfaces
      add_ah_interface
      wifi_restart
      record_wifi_interfaces
    fi
    
    echo "(I) Freifunk: wifi access point interface: '$wifi_ap_interface'"
    echo "(I) Freifunk: wifi ad-hoc interface: '$wifi_ah_interface'"
fi


# ------------------------------------- #
# A S S I G N  I N T E R F A C E S #
# ------------------------------------- # 

if [ -n "$wifi_ah_interface" ]; then
    mesh_interfaces="$mesh_interfaces $wifi_ah_interface"
fi

if [ -n "$wifi_ap_interface" ]; then
    ext_interfaces="$ext_interfaces $wifi_ap_interface"
fi

if [ -n "$lan_interface" ]; then
    if [ -n "$wifi_ah_interface" ]; then
        ext_interfaces="$ext_interfaces $lan_interface"
    else
        mesh_interfaces="$mesh_interfaces $lan_interface"
    fi
fi

#trim variables and remove double spaces
strip() { echo "$@"; }
mesh_interfaces=$(strip $mesh_interfaces)
ext_interfaces=$(strip $ext_interfaces)

echo "(I) Freifunk: mesh interfaces: '$mesh_interfaces'"
echo "(I) Freifunk: external interfaces: '$ext_interfaces'"
echo "(I) Freifunk: wan interfaces: '$wan_interface'"

if [ -z "$mesh_interfaces" ]; then
    echo "(E) Freifunk: No mesh interfaces found."
    exit 1
fi

#get the mac of the interface that will be used by batman-adv
mesh_mac=$(ifconfig ${mesh_interfaces%% *} | grep HWaddr | awk '{print $5}')
echo "(I) Freifunk: mac for mesh: '$mesh_mac'"


uci set freifunk.settings.mesh_interfaces="$mesh_interfaces"
uci set freifunk.settings.ext_interfaces="$ext_interfaces"
uci set freifunk.settings.wan_interfaces="$wan_interface"
uci set freifunk.settings.mac="$mesh_mac"

uci commit

echo "(I) Freifunk: done freifunk_setup"
