#!/bin/sh

#Get the IP of a node by MAC.
mac=$1

ff_subnet=`uci get -q freifunk.settings.ff_subnet`
debug=`uci get -q freifunk.settings.debug`

start_ip=`uci get dhcp.mesh.start`
end_ip=`uci get dhcp.mesh.limit`


if [ ${#mac} -eq 17 ]
then
    #lowercase for later comparison
    mac=`echo $mac | tr '[A-Z]' '[a-z]'`
    
    #convert from locally to universally administered mac
    #so we can compare to the mac that arping will return
    a=${mac%%:*} #cut out first hex
    a=$((0x$a & 253)) #set second bit to 0
    a=`printf '%x\n' $a` # convert to hex
    mac="$a:${mac#*:}" #reassemble mac
else
    #mac is invalid
    exit 1
fi


seed=0
for x in $(echo $mac | tr ":" "\n"); do
    seed=$((seed + 0x$x + (0x$x << 8) + (0x$x << 16)))
done

addr_t=$((start_ip + (seed % end_ip)))

#we try only ten times to not to spam the network
i=0
while [ $i -lt 10 ]
do
    addr_c=$(((addr_t & 0xff00) >> 8))
    addr_d=$(((addr_t & 0x00ff) >> 0))

    addr_ip="10.$ff_subnet.$addr_c.$addr_d"
    addr_mac=`arping -c 3 -f -I br-mesh $addr_ip | grep -m 1 -o -E '[[:xdigit:]]{1,2}(:[[:xdigit:]]{2}){5}' | tr '[A-Z]' '[a-z]'`

    if [ "$addr_mac" == "$mac" ]; then
        #found IP matching the given MAC :-)
        echo $addr_ip
        exit 0
    fi
    
    addr_t=$((addr_t+1))
    i=$((i + 1))
done

#IP not found :-(
exit 1
