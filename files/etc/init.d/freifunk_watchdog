#!/bin/sh /etc/rc.common

#This script is run at startup and then every 5min using cron.

START=99

start()
{

#Check for Internet access on the WAN port and switch
#batman-adv between client und server mode accordingly.
#This script is called by cron every 5min.

#prevent script from being called simultaneously
lock_dir=/var/lock/freifunk_watchdog.lock
mkdir $lock_dir || exit

exec >/tmp/freifunk_watchdog.log 2>&1


echo "(I) Start: $(date)"

[ "$(uci get -q firewall.share_internet)" = "forwarding" ] && \
	share_internet="yes" || share_internet="no"
echo "(I) share_internet: '$share_internet'"

addr() {
	ip -$1 address show dev $2 2> /dev/null | tr '/' ' '| awk '/inet/{print($2); exit(0);}'
}

default_gw() {
	ip -$1 route list 0/0 dev $2 2> /dev/null | awk '{print($3); exit(0)}'
}

own_public_ip=$(addr 4 br-public)
own_private_ip=$(addr 4 br-private)

echo "(I) Own public IPv4 address: '$own_public_ip'"
echo "(I) Own private IPv4 address: '$own_private_ip'"

fastd=$(which fastd)


#shuffle a list and pick n entries
pick()
{
	local n="$1"; shift;
	echo $@ | tr ' ' '\n' | awk 'BEGIN { srand() } { print rand() "\t" $0 }' | sort -n | cut -f2- | head -$n
}

#ping root servers to check a gateway
#on a given interface for internet access
check_internet() {
	local dev="$1" gw="$2"
	local addrs="192.33.4.12 128.8.10.90 193.0.14.129 198.41.0.4 192.228.79.201 192.5.5.241 192.36.148.17 192.58.128.30"
	local addr cmd ok

	[ -z "$gw" ] && { return 1; }
	[ -z "$dev" ] && { echo "(E) No WAN interface given for check_internet()."; return 1; }

	echo "(I) Try to ping root servers on '$dev' using gateway: '$gw'"
	IFS="
"
	for addr in `pick 3 $addrs`; do
		echo -n "(I) Ping $addr "
		ip route add "$addr/32" via "$gw" dev "$dev"
		ping "$addr" -c 1 -I "$dev" -q -W 1 &> /dev/null; ok=$?;
		ip route del "$addr/32" via "$gw" dev "$dev"
		if [ $ok -eq 0 ]; then
			echo "- success."
			return 0
		else
			echo "- failed."
		fi
	done
	echo "(W) Cannot reach any tested IP."
	return 1
}

#check/establish internet on wan
check_wan()
{
	local wan="$1"
	local gw=""

	[ -z "$wan" ] && {
		echo "(I) No WAN interface found."
		return 1
	}

	echo "(I) Check if Internet is accessible via '$wan'."

	gw=$(default_gw 4 "$wan")
	check_internet "$wan" "$gw" && return 0

	[ "$(uci get -q network.wan.proto)" != "dhcp" ] && {
		return 0
	}

	echo "(I) Try to aquire new DHCP lease."
	local pidfile="/var/run/udhcpc-$wan.pid"
	if [ -f "$pidfile" ]; then
		local pid=$(cat "$pidfile")
		kill -s SIGUSR2 "$pid" #release lease
		kill -s SIGUSR1 "$pid" #get new lease

		sleep 3
		gw=$(default_gw 4 "$wan")
		check_internet "$wan" "$gw" && return 0
	else
		echo "(W) No pidfile found."
	fi

	echo "(W) No Internet detected on '$wan'"
	ip addr flush dev "$wan" 2> /dev/null
	return 1
}

is_running() {
	ps | grep -v grep | grep "$1" > /dev/null
}



if check_wan "br-wan"; then
	echo "(I) We have local Internet."
	has_internet="yes"
else
	echo "(I) We do not have local Internet."
	has_internet="no"
fi


#store data for web-gui
echo -n "$has_internet" > /tmp/has_internet


if [ "$has_internet" = "yes" ]
then

	#start/restart fastd
	is_running "$fastd" || /etc/init.d/fastd start

	#announce gateway
	[ "$share_internet" = "yes" ] && {
		echo -n "{\"type\" : \"gateway\", \"addr\" : \"$own_public_ip\"}" | alfred -s 88
	}
else

	#stop fastd
	is_running "$fastd" && /etc/init.d/fastd stop
fi


echo "(I) Done."
rmdir $lock_dir
}
