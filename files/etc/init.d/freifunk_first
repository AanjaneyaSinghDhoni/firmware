#!/bin/sh /etc/rc.common

START=19


start () 
{
exec >/tmp/freifunk_first.log 2>&1
. /sbin/freifunk_shared

if [ -f /etc/rc.d/S50telnet ]; then
    echo "(I) Freifunk: skip and wait for setup to be run"
    exit
fi

echo "(I) Freifunk: start freifunk_first"


mac=`uci get -q freifunk.settings.mac`
mesh_interfaces=`uci get -q freifunk.settings.mesh_interfaces`
bat_interfaces=`uci get -q freifunk.settings.bat_interfaces`
lan_interfaces=`uci get -q freifunk.settings.lan_interfaces`
wan_interfaces=`uci get -q freifunk.settings.wan_interfaces`
share_wan=`uci get -q freifunk.settings.share_wan`
config_nets=`uci get -q freifunk.settings.config_nets`

echo "(I) Freifunk: mac: '$mac'"
echo "(I) Freifunk: mesh_interfaces: '$mesh_interfaces'"
echo "(I) Freifunk: bat_interfaces: '$bat_interfaces'"
echo "(I) Freifunk: lan_interfaces: '$lan_interfaces'"
echo "(I) Freifunk: wan_interfaces: '$wan_interfaces'"
echo "(I) Freifunk: share_wan: '$share_wan'"
echo "(I) Freifunk: config_nets: '$config_nets'"


#Create dummy interfaces to be able to set the mac of
#br-mesh and the mac for the OGMs of batman-adv freely.
#Also, a bridge needs at least one interface.

echo "(I) Freifunk: Create dummy_mesh interface."
tunctl -t dummy_mesh > /dev/null
ifconfig dummy_mesh hw ether $mac up

echo "(I) Freifunk: Create dummy_bat interface."
tunctl -t dummy_bat > /dev/null
ifconfig dummy_bat hw ether $mac up

echo "(I) Freifunk: Create dummy_lan interface."
tunctl -t dummy_lan > /dev/null
ifconfig dummy_lan hw ether $mac up


uci set batman-adv.bat0.interfaces="dummy_bat $bat_interfaces"
uci set batman-adv.bat0.gw_mode="client"


echo "(I) Freifunk: Assign MESH/LAN/WAN interfaces."

uci set network.mesh.ifname="dummy_mesh bat0 $mesh_interfaces"
uci set network.lan.ifname="dummy_lan $lan_interfaces"
uci set network.wan.ifname="${wan_interfaces%% *}" #only use first item


if [ "$share_wan" = "yes" ]; then
    #forward from mesh to wan
    uci add firewall forwarding
    uci set firewall.@forwarding[-1]="forwarding"
    uci set firewall.@forwarding[-1].src="mesh"
    uci set firewall.@forwarding[-1].dest="wan"
fi


#filter ssh/https ports
for src in wan lan mesh; do
  default_target=`query "uci -q get firewall.@zone[?].name" "$src" "input"`
  contains "$src" "$config_nets" && target=ACCEPT || target=REJECT
  [ "$target" = "$default_target" ] && continue
  for port in 22 443; do
    uci add firewall rule
    uci set firewall.@rule[-1].src=$src
    uci set firewall.@rule[-1].dest_port=$port
    uci set firewall.@rule[-1].target=$target
    uci set firewall.@rule[-1].proto=tcp
  done
done


echo "(I) Freifunk: done freifunk_first"
}
