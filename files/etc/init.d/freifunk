#!/bin/sh /etc/rc.common

START=96

#boot () {

start () {

LOG=/tmp/freifunk.log
date > $LOG

#abort if /etc/config/freifunk doesn's exist
if [ ! -f /etc/config/freifunk ]; then
    echo "/etc/config/freifunk not found" >> $LOG
    exit
fi


ah_ssid=`uci get freifunk.settings.ah_ssid`
ap_ssid=`uci get freifunk.settings.ap_ssid`

wifi_interface=`uci get freifunk.settings.wifi_interface`
wifi_device=`uci get freifunk.settings.wifi_device`

wan_interface=`uci get freifunk.settings.wan_interface`
lan_interface=`uci get freifunk.settings.lan_interface`


echo "ah_ssid: '$ah_ssid'" >> $LOG
echo "ap_ssid: '$ap_ssid'" >> $LOG
echo "wifi_interface: '$wifi_interface'" >> $LOG
echo "wifi_device: '$wifi_device'" >> $LOG
echo "wan_interface: '$wan_interface'" >> $LOG
echo "lan_interface: '$lan_interface'" >> $LOG


if  [ -f /etc/rc.d/S60dnsmasq ]; then
    /etc/init.d/dnsmasq stop
    /etc/init.d/dnsmasq disable
fi

if  [ -f /etc/rc.d/S65nodogsplash ]; then
    /etc/init.d/nodogsplash stop
    /etc/init.d/nodogsplash disable
fi

if  [ -f /etc/rc.d/S90batman-adv ]; then
    /etc/init.d/batman-adv stop
    /etc/init.d/batman-adv disable
fi


if [ -z "$lan_interface" ]; then
    lan_interface=`uci get network.@switch_vlan[0].device`
    if [ -z "$lan_interface" ]; then
        echo "Cannot get lan_interface" >> $LOG
        exit
    else
        uci set freifunk.settings.lan_interface=$lan_interface
        uci commit freifunk
    fi
fi

if [ -z "$wan_interface" ]; then
    wan_interface=`uci get network.wan.ifname`
    if [ -z "$wan_interface" ]; then
        echo "Cannot get wan_interface" >> $LOG
        exit 1
    else
        uci set freifunk.settings.wan_interface=$wan_interface
        uci commit freifunk
    fi
fi

wan_mac=$(ifconfig $wan_interface | grep HWaddr | awk '{print $5}')
echo "wan_mac '$wan_mac'" >> $LOG

let x=29
let y=0x${wan_mac:12:2}                             
let z=0x${wan_mac:15:2}                      
mesh_ip="10.$x.$y.$z"
echo "mesh_ip '$mesh_ip'" >> $LOG


# default configuration on first boot
if [ "$mesh_ip" != `uci -q get network.mesh.ipaddr` ]; then
    echo "do setup" >> $LOG

    ## /etc/config/network ##
    uci -q delete network.lan
    uci -q delete network.mesh
    uci set network.mesh="interface"
    uci set network.mesh.type="bridge"
    uci add_list network.mesh.ifname="bat0 $lan_interface"
    uci set network.mesh.mtu="1527"
    uci set network.mesh.ipaddr="$mesh_ip"
    uci set network.mesh.proto=static
    uci set network.mesh.netmask="255.0.0.0"
    uci commit network

    if [ -z "$wifi_device" ]; then
        wifi_device=`uci get wireless.@wifi-iface[0].device` #`uci show wireless | awk '/=wifi-device/ {print}'`
        if [ -z "$wifi_device" ]; then
            echo "Cannot get wifi_device"
            exit
        else
            uci set freifunk.settings.wifi_device=$wifi_device
            uci commit freifunk
        fi
    fi
    
    ## /etc/config/wireless ##
    uci set wireless.$wifi_device.channel=1

    #remove all wifi_interface entries
    while uci -q delete wireless.@wifi-iface[0]; do :; done
    
    #AdHoc for batman
    uci add wireless wifi-iface
    uci set wireless.@wifi-iface[-1].device="$wifi_device"
    uci set wireless.@wifi-iface[-1].mode=adhoc
    uci set wireless.@wifi-iface[-1].ssid="$ah_ssid"
    uci set wireless.@wifi-iface[-1].bssid="12:CA:FF:EE:BA:BE"
    uci set wireless.@wifi-iface[-1].hidden=1

    #AccessPoint for clients
    uci add wireless wifi-iface
    uci set wireless.@wifi-iface[-1].device="$wifi_device"
    uci set wireless.@wifi-iface[-1].mode=ap
    uci set wireless.@wifi-iface[-1].network=mesh
    uci set wireless.@wifi-iface[-1].ssid="$ap_ssid"
    
    #wireless is disabled by default
    uci -q delete wireless.@wifi-device[0].disabled

    #uci commit wireless
    uci commit wireless
    wifi down
    wifi up
    
    uci set dhcp.mesh.start=$((256*256*$x+1))
    uci set dhcp.mesh.limit=$((255*255+253))
    uci commit dhcp
    
    if [ -z "$wifi_interface" ]; then
        wifi_interface=`iwconfig 2> /dev/null | awk "/$ah_ssid/ { print \\$1 }"`
        if [ -z "$wifi_interface" ]; then
            echo "Cannot get wifi_interface" >> $LOG
            exit 1
        else
            uci set freifunk.settings.wifi_interface=$wifi_interface
            uci commit freifunk
        fi
    fi
    
    if [ -z "$ah_ssid" -o -z "$ap_ssid" ]; then
        echo "ah_ssid and ap_ssid required" >> $LOG
        exit 1
    fi

    if [ "$ah_ssid" == "$ap_ssid" ]; then
        echo "ah_ssid and ap_ssid need to be different" >> $LOG
        exit 1
    fi
fi


/etc/init.d/network restart             
echo "network $?" >> $LOG

/etc/init.d/dnsmasq restart
echo "dnsmasq $?" >> $LOG


wan_ip=$(route -n | grep 'UG' | awk '{ print $2}')
echo "wan_ip: '$wan_ip'" >> $LOG

#for batman
ifconfig $wifi_interface mtu 1527

IPCHECK="192.33.4.12 128.8.10.90 193.0.14.129 198.41.0.4 192.228.79.201 192.5.5.241 192.36.148.17 192.58.128.30"
if [ $(fping -a $IPCHECK 2> /dev/null | wc -l) != 0 ]; then
    echo "Der Router wird als Gateway konfiguriert." >> $LOG
    if [ -n `uci get n2n.@edge[0].key` ]; then
        echo "Eintrag in /etc/config/n2n gefunden. Starte VPN Tunnel." >> $LOG
        /etc/init.d/n2n restart
        sleep 20
    fi
    
    /etc/init.d/nodogsplash start                
    echo "nodogsplash $?" >> $LOG
    
    # Batman Server Mode
    uci set batman-adv.bat0.interfaces="$wifi_interface"
    uci set batman-adv.bat0.gw_mode=server
else
    echo "Der Router wird als Client konfiguriert." >> $LOG
    
    # Batman Client Mode
    uci set batman-adv.bat0.interfaces="$wifi_interface"
    uci set batman-adv.bat0.gw_mode=client
fi

uci commit batman-adv
/etc/init.d/batman-adv restart
echo "batman-adv $?" >> $LOG


echo "###################" >> $LOG
echo "ah_ssid: '$ah_ssid'" >> $LOG
echo "ap_ssid: '$ap_ssid'" >> $LOG
echo "wifi_interface: '$wifi_interface'" >> $LOG
echo "wifi_device: '$wifi_device'" >> $LOG
echo "mesh_ip: '$mesh_ip'" >> $LOG
echo "wan_interface: '$wan_interface'" >> $LOG
echo "lan_interface: '$lan_interface'" >> $LOG
}

stop () {
    /etc/init.d/nodogsplash stop
    /etc/init.d/batman-adv stop
    /etc/init.d/dnsmasq stop
}

