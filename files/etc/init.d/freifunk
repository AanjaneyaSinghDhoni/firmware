#!/bin/sh /etc/rc.common

START=96


start () {


ap_ssid="www.freifunk-bielefeld.de"
ah_ssid="batman.freifunk-bielefeld.de"
ff_subnet=29


#write everything from stdout and stderr to a log file
exec >/tmp/freifunk.log 2>&1
date

echo "(I) Freifunk: stop /etc/init.d/nodogsplash"
/etc/init.d/nodogsplash stop

echo "(I) Freifunk: stop /etc/init.d/batman-adv"
/etc/init.d/batman-adv stop

echo "(I) Freifunk: stop /etc/init.d/dnsmasq"
/etc/init.d/dnsmasq stop

echo "(I) Freifunk: stop /etc/init.d/firewall"
/etc/init.d/firewall stop

echo "(I) Freifunk: stop /etc/init.d/network"
/etc/init.d/network stop


echo "(I) Freifunk: start setup"

wan_interface=`uci get network.wan.ifname`
if [ -z "$wan_interface" ]; then
    echo "(E) Freifunk: Cannot get wan interface."
    exit 1
fi
echo "(I) Freifunk: wan interface: '$wan_interface'"

lan_interface=`uci get network.lan.ifname`
if [ -z "$lan_interface" ]; then
    echo "(E) Freifunk: Cannot get lan interface!"
    exit 1
fi
echo "(I) Freifunk: lan interface: '$lan_interface'"

wan_mac=$(ifconfig $wan_interface | grep HWaddr | awk '{print $5}')
echo "(I) Freifunk: wan mac address: '$wan_mac'"

let x=0x${wan_mac:12:2}
let y=0x${wan_mac:15:2}
mesh_ip="10.$ff_subnet.$x.$y"
echo "(I) Freifunk: mesh_ip: '$mesh_ip'"

## /etc/config/network ##
echo "(I) Freifunk: setup /etc/config/network"
uci -q delete network.lan
uci set network.mesh="interface"
uci set network.mesh.type="bridge"
uci set network.mesh.ifname="bat0 $lan_interface"
uci set network.mesh.mtu="1528"
uci set network.mesh.ipaddr="$mesh_ip"
uci set network.mesh.proto=static
uci set network.mesh.netmask="255.0.0.0"

wifi_device=`uci get wireless.@wifi-iface[0].device`
if [ -z "$wifi_device" ]; then
    echo "(E) Freifunk: Cannot get wifi device."
    exit 1
fi
echo "(I) Freifunk: wifi device: '$wifi_device'"


echo "(I) Freifunk: setup /etc/config/wireless"
## /etc/config/wireless ##
uci set wireless.$wifi_device.channel=1

#remove all wifi_interface entries
while uci -q delete wireless.@wifi-iface[0]; do :; done

#AdHoc for batman
uci add wireless wifi-iface
uci set wireless.@wifi-iface[-1].device="$wifi_device"
uci set wireless.@wifi-iface[-1].mode=adhoc
uci set wireless.@wifi-iface[-1].ssid="$ah_ssid"
uci set wireless.@wifi-iface[-1].bssid="12:CA:FF:EE:BA:BE"
uci set wireless.@wifi-iface[-1].hidden=1

#AccessPoint for clients
uci add wireless wifi-iface
uci set wireless.@wifi-iface[-1].device="$wifi_device"
uci set wireless.@wifi-iface[-1].mode=ap
uci set wireless.@wifi-iface[-1].network=mesh
uci set wireless.@wifi-iface[-1].ssid="$ap_ssid"

#wireless is disabled by default
uci -q delete wireless.@wifi-device[0].disabled

echo "(I) Freifunk: wireless down/up"
wifi down
wifi up

echo "(I) Freifunk: setup /etc/config/dhcp"
uci -q delete dhcp.lan
uci set dhcp.mesh=dhcp
uci set dhcp.mesh.interface=mesh
uci set dhcp.mesh.start=$((256*256*$ff_subnet+1))
uci set dhcp.mesh.limit=$((255*255+253))
uci set dhcp.mesh.leasetime=12h

echo "(I) Freifunk: setup /etc/config/firewall"
while uci -q delete firewall.@forwarding[0]; do :; done #remove lan forwarding
uci add firewall forwarding
uci set firewall.@forwarding[-1]="forwarding"
uci set firewall.@forwarding[-1].src="mesh"
uci set firewall.@forwarding[-1].dst="wan"

while uci -q delete firewall.@zone[0]; do :; done #remove lan zone
uci add firewall zone
uci set firewall.@zone[-1].name=wan
uci set firewall.@zone[-1].input=REJECT
uci set firewall.@zone[-1].output=ACCEPT
uci set firewall.@zone[-1].forward=REJECT
uci set firewall.@zone[-1].masq=1
uci set firewall.@zone[-1].mtu_fix=1

uci add firewall zone
uci set firewall.@zone[-1].name=mesh
uci set firewall.@zone[-1].input=ACCEPT
uci set firewall.@zone[-1].output=ACCEPT
uci set firewall.@zone[-1].forward=REJECT


echo "(I) Freifunk: get wifi interface"
wifi_interface=`iwconfig 2> /dev/null | awk "/$ah_ssid/ { print \\$1 }"`
if [ -z "$wifi_interface" ]; then
    echo "(E) Freifunk: Cannot get wifi interface!"
    exit 1
fi

echo "(I) Freifunk: restart /etc/init.d/network"
/etc/init.d/network restart

echo "(I) Freifunk: restart /etc/init.d/firewall"
/etc/init.d/firewall restart

echo "(I) Freifunk: restart /etc/init.d/dnsmasq"
/etc/init.d/dnsmasq restart

#for batman
ifconfig $wifi_interface mtu 1528

IPCHECK="192.33.4.12 128.8.10.90 193.0.14.129 198.41.0.4 192.228.79.201 192.5.5.241 192.36.148.17 192.58.128.30"
if [ $(fping -a $IPCHECK 2> /dev/null | wc -l) != 0 ]; then
    echo "(I) Freifunk: Configure node as gateway."
    if [ -n `uci get n2n.@edge[0].key` ]; then
        echo "(I) Freifunk: Found key in /etc/config/n2n gefunden. Try to start VPN tunnel."
        /etc/init.d/n2n restart
        sleep 20
    fi
    
    echo "(I) Freifunk: restart /etc/init.d/nodogsplash"
    /etc/init.d/nodogsplash restart
    
    # Batman Server Mode
    bat_mode="server"
else
    echo "(I) Freifunk: Configure node as client."
    
    # Batman Client Mode
    bat_mode="client"
fi

uci set batman-adv.bat0.interfaces="$wifi_interface"
uci set batman-adv.bat0.gw_mode="$bat_mode"

echo "(I) Freifunk: restart /etc/init.d/batman-adv"
/etc/init.d/batman-adv restart

date
echo "(I) Freifunk: done"
}
